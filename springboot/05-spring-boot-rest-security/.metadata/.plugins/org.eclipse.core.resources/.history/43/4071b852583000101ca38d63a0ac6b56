package com.luv2code.springboot.cruddemo.security;

import javax.sql.DataSource;

import org.springframework.context.annotation.*;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.provisioning.JdbcUserDetailsManager;
import org.springframework.security.provisioning.UserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class DemoSecurityConfig {


	
	//add support for jdbc .. no more hard coded users
	
	@Bean
	public UserDetailsManager userDetailsManager(DataSource dataSource) {
		
		
		JdbcUserDetailsManager jdbcUserDetailsManager = new JdbcUserDetailsManager(dataSource);
		return jdbcUserDetailsManager;
		
	}
	
	@Bean
	public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
		
		http.authorizeHttpRequests(configurer -> configurer
				.requestMatchers(HttpMethod.GET, "/api/employees").hasRole("EMPLOYEE")
				.requestMatchers(HttpMethod.GET, "/api/employees/**").hasRole("EMPLOYEE")
				.requestMatchers(HttpMethod.POST, "/api/employees").hasRole("MANAGER")
				.requestMatchers(HttpMethod.PUT, "/api/employees/**").hasRole("MANAGER")
				.requestMatchers(HttpMethod.PATCH, "/api/employees/**").hasRole("MANAGER")
				.requestMatchers(HttpMethod.DELETE, "/api/employees/**").hasRole("ADMIN")
				

				
				);
		
		//use HTTP basic authentication
		http.httpBasic(Customizer.withDefaults());
		
		//disable cross site request forgery (CSRF)
		http.csrf(csrf -> csrf.disable());
		
		return http.build();
	}
	
	
	/*
	 * 	@Bean
	public InMemoryUserDetailsManager userDetailsManager() {
		
		UserDetails john = User.builder().username("John").password("{noop}test123").roles("EMPLOYEE").build();
		UserDetails mary = User.builder().username("Mary").password("{noop}test123").roles("EMPLOYEE","MANAGER").build();
		UserDetails susan = User.builder().username("Susan").password("{noop}test123").roles("EMPLOYEE","MANAGER","ADMIN").build();

		return new InMemoryUserDetailsManager(john,mary,susan);

	}
	 * 
	 */
}
